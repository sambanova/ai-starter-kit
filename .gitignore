# Data
*.bin
*.parquet
*.sqlite3
*.pickle

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
*.env
.venv
secrets.toml
env/
venv/
ENV/
env.bak/
venv.bak/
server/ask-venv/*
secret.txt
.test_suite_venv

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

#vector embeddings
chroma_db
qdrant_storage
*.snapshot

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env*.local

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

# Fine tuning Data
fine_tuning_sql/data/
yoda/data/
utils/synthetic_data_gen/output/

# search assistant Data
search_assistant/data/
yoda/data/

#snapi and snsdk
SambaStudio_API_Client-*
snsdk-*
# FineTune Local Data
fine_tuning_embeddings/sample_data
fine_tuning_embeddings/data
fine_tuning_embeddings/processed_data
fine_tuning_embeddings/results
fine_tuning_embeddings/finetuned_model

#CoE JumpStart
CoE_jump_start/langgraph_rag_agent_llama3_local.ipynb
CoE_jump_start/data
CoE_jump_start/results
CoE_jump_start/expert_results

#Local Test Files

=======
#image search data
image_search/data


=======
#edgar data
edgar_qna/data

utils/parsing/output
utils/parsing/confluence-ingest-output
utils/parsing/unstructured-api/parsing_service.pid
=======
#enterprise knowledge retriever data
enterprise_knowledge_retriever/data
enterprise_knowledge_retriever/app/output
enterprise_knowledge_retriever/output

#financial_assistant
financial_assistant/streamlit/cache/*
financial_assistant/streamlit/cache_prod_mode/*

#multimodal upload
multimodal_knowledge_retriever/data/upload

=======
#web crawled retriever data
web_crawled_data_retriever/data/

=======
# benchmarking data
benchmarking/data
benchmarking/debug

=======
# agent workflow
agent_workflows/output
agent_workflows/data/tmp

logs/

=======
#evals
eval_jumpstart/data
eval_jumpstart/notebooks/wandb
utils/eval/res.csv
utils/eval/data

=======
#wandb
wandb/

# VSCode
.vscode/*

# all .db files
*.db
utils/eval/.deepeval-cache.json
utils/eval/results
utils/eval/weave
